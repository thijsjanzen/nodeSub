// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_p_m_rcpp
Rcpp::NumericMatrix get_p_m_rcpp(Rcpp::List eig, double branch_length, double rate);
RcppExport SEXP _nodeSub_get_p_m_rcpp(SEXP eigSEXP, SEXP branch_lengthSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type eig(eigSEXP);
    Rcpp::traits::input_parameter< double >::type branch_length(branch_lengthSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    rcpp_result_gen = Rcpp::wrap(get_p_m_rcpp(eig, branch_length, rate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nodeSub_get_p_m_rcpp", (DL_FUNC) &_nodeSub_get_p_m_rcpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_nodeSub(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
