language: r
cache: packages
# dist: bionic

os: 
 # - osx
  - linux
# apt_packages:
# - openjdk-7-jre
 
 
r_github_packages:
  - Giappo/mbd
  - jimhester/covr
  - jimhester/lintr
  - MangoTheCat/goodpractice
  - ropensci/beautier
  - ropensci/beastier
  - ropensci/mauricer
  - richelbilderbeek/mcbette
  - thijsjanzen/nLTT
  - rsetienne/PBD/PBD
  - richelbilderbeek/becosys

before_install:
  # Fix rJava error, from https://travis-ci.community/t/cannot-connect-to-java-from-r/9754/8
  - sudo $(which R) CMD javareconf
  # From https://stackoverflow.com/a/20042195
 # - Rscript -e "update.packages(checkBuilt = TRUE, ask = FALSE)"
  # ImageMagick
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:opencpu/imagemagick; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install -y libmagick++-dev; fi
  # Rmpfr
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt install -qq libmpfr-dev; fi
  # Java
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then R CMD javareconf; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then R --quiet -e 'install.packages("rJava", type="source", repos="http://cran.us.r-project.org")'; fi
  # PDF
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo tlmgr update --self; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo tlmgr install inconsolata; fi
  
before_script:
  - Rscript -e "beastier::install_beast2()"
  - Rscript -e "beastier::is_beast2_installed()"
  - Rscript -e 'mauricer::install_beast2_pkg("NS")'
  - Rscript -e 'mauricer::is_beast2_ns_pkg_installed()'
  - beast2_installed_before=$(Rscript -e "beastier::is_beast2_installed()")
  - beast2_ns_pkg_installed_before=$(Rscript -e 'mauricer::is_beast2_ns_pkg_installed()')
  - echo $beast2_installed_before
  - echo $beast2_ns_pkg_installed_before


script:
  - travis_wait 60 R CMD build .
  - travis_wait 60 R CMD check *tar.gz

after_success:
  - Rscript -e 'lintr::lint_package()'
  - Rscript -e 'library(covr); codecov()'
  - Rscript -e 'library(goodpractice); gp()'
